AWSTemplateFormatVersion: "2010-09-09"
Description: Create an Auto Scaling Group

Parameters:
  SubnetIds:
    Description: Subnet IDs where instances can be launched
    Type: List<AWS::EC2::Subnet::Id>
  AmiId:
    Description: The Application Server AMI ID
    Type: AWS::EC2::Image::Id
    Default: ami-c58c1dd3  # AWS Linux in us-east-1
  KeyPair:
    Type: String
    Description: The key pair that is allowed SSH access
    Default: univrsnew
  InstanceType:
    Description: The Type of instance to launch
    Type: String
    Default: t2.micro
  MinSize:
    Description: Minimum number of instances in the group
    Type: Number
    Default: 1
  MaxSize:
    Description: Maximum number of instances in the group
    Type: Number
    Default: 4
  DesiredCount:
    Description: Number of instances in the group
    Type: Number
    Default: 2
  ThresholdCPUHigh:
    Description: Launch new instances when CPU Utilization is over this threshhold
    Type: Number
    Default: 60
  ThresholdCPULow:
    Description: Remove instances when CPU Utilization is under this threshold
    Type: Number
    Default: 40
  ThresholdMinutes:
    Description: Launch new instances when over the CPU threshold for this many minues
    Type: Number
    Default: 5

Resources:
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MinSize: !Ref MinSize
      MaxSize: !Ref MaxSize
      DesiredCapacity: !Ref DesiredCount
      LaunchConfigurationName: !Ref LaunchConfiguration
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName} server"
          PropagateAtLaunch: true
      VPCZoneIdentifier: !Ref SubnetIds
  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref AmiId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyPair
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          # This will be run on startup, launch your application
  ScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref AutoScalingGroup
      Cooldown: 60
      ScalingAdjustment: 1
  ScaleDownPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref AutoScalingGroup
      Cooldown: 60
      ScalingAdjustment: -1
  CPUHighAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref ScaleUpPolicy
      AlarmDescription: Scale up on CPU load
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref AutoScalingGroup
      EvaluationPeriods: !Ref ThresholdMinutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Period: 60
      Statistic: Average
      Threshold: !Ref ThresholdCPUHigh
  CPULowAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref ScaleDownPolicy
      AlarmDescription: Scale Down on CPU Load
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref AutoScalingGroup
      EvaluationPeriods: !Ref ThresholdMinutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Period: 60
      Statistic: Average
      Threshold: !Ref ThresholdCPULow
   
